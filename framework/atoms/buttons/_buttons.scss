/*
Buttons

Custom bootstrap buttons styling.

.btn-default     - Button default
.btn-primary     - Button primary
.btn-secondary   - Button secondary
.btn-ctn         - Button call to action
.btn-ctn--border - Button call to action with border
.btn-menu        - Button menu

Style guide: buttons
*/

@mixin whitespace-reset() {
  line-height: 1.667;
  padding-bottom: 0.5em;
  padding-top: 0.5em;
  white-space: normal;
}

%btn-default {
  background: none;
  border-color: $brand-primary;
  color: $brand-primary;

  &:hover,
  &:focus {
    background-color: $brand-primary;
    color: $white;
  }
}

.btn {
  @extend %hidden-print;

  border-radius: 0;
  border-width: 2px;
  font-size: $font-size-little;
  font-weight: $font-weight-bold;
  line-height: 1;
  margin-bottom: 1em;
  min-height: 2.75em;
  padding: 0.75em 1em;
  text-decoration: none;

  @include _focus_outline_border(3px, $yellow-light, -3px);

  &:link {
    text-decoration: none;
  }

  &:hover,
  &:active,
  &:focus {
    position: relative;
    text-decoration: underline;

    @include box-shadow(none);

    z-index: 999;
  }

  &::after {
    line-height: inherit;
    position: static;
  }

  &.btn-default {
    @extend %btn-default;
  }

  &.btn-primary {
    border-color: $brand-primary;

    &:hover,
    &:active {
      background-color: $white;
      color: $brand-primary;
    }

    &:focus {
      background-color: $brand-primary;
      color: $white;
    }
  }

  &.btn-secondary {
    background-color: $white;
    border-color: $white;
    color: $brand-primary;
  }

  &.btn-ctn {
    @include whitespace-reset();

    background-color: $yellow-light;
    color: $black;

    &:hover,
    &:active {
      background-color: $yellow-light;
      border-color: $text-color;
    }

    &:focus {
      border-color: $text-color;
      outline-color: $text-color;
    }

    &::after {
      @extend %icon--after;
      @extend %icon--right;

      font-size: 0.8em;
      margin-left: 10px;
    }
  }

  &.btn-menu {
    background-color: $brand-primary;
    border-color: $brand-primary;
    color: $white;

    &:hover,
    &:active,
    &:focus {
      color: $white;
    }

    &:active,
    &:focus {
      outline: 3px solid $yellow-light;
      outline-offset: -3px;
    }

    &:focus {
      border-color: $yellow-light;
      outline-color: $yellow-light;
    }

    &::after {
      @extend %icon--after;
      @extend %icon--arrow-down;

      font-size: 0.45em;
      margin-left: 6px !important;
      position: relative;
      top: -2px;

      @include transition(all 0.3s ease 0s);
    }

    &.is-collapsed {
      &::after {
        @include rotate(180deg);
      }
    }
  }
}

.btn-ctn--border {
  background-color: $yellow-light;
  border-color: $black;
  color: $black;

  &:hover,
  &:active {
    border-color: $black;
  }

  &:focus {
    border-color: $text-color;
    outline-color: $text-color;
  }

  &::after {
    display: none;
  }
}

// Button modifier to add space between the button and the element above.
.btn--margin-top {
  margin-top: 0.556em;
}

// Class that can be also used on a button wrapper since there are sometimes
// situations where button is wrapped in unnecessary markup coming from a CMS.
.btn--no-margin-bottom {
  * {
    margin-bottom: 0 !important;
  }

  margin-bottom: 0 !important;
}

/*
Button Condensed

Button condensed element.

Markup: html/btn-condensed.html

Style guide: buttons.btn--condensed
*/

.btn.btn--condensed {
  font-weight: normal;
  width: auto;
}

/*
Button block

Button block component.

Markup: html/btn-block.html

Style guide: buttons.btn-block
*/

.btn-block {
  margin-bottom: -2px !important;
  max-width: 450px;
  text-align: left;
  width: 100%;

  @include whitespace-reset();

  &:last-child {
    margin-bottom: 10px;
  }

  + .btn-block {
    margin-top: 0;
  }
}

/*
Button Search

Button search component.

Markup: html/btn-search.html

Style guide: buttons.btn-search
*/

.btn.btn-search {
  background-color: $grey-light;
  border-color: $white;
  color: $blue-dark;

  &:hover {
    background-color: $grey-light;
    color: $grey-base;
  }
}

/*
Button Collapse

Button collapse element.

Markup: html/btn-collapse.html

Style guide: buttons.btn-collapse
*/

.btn-collapse {
  @extend %btn-default;

  .toggling-text::after {
    content: '\00a0';
  }

  &:hover,
  &:focus {
    .toggling-text,
    .toggling-text::after {
      text-decoration: underline;
    }
  }

  .icon {
    margin-left: 0.3em;

    &::before {
      vertical-align: bottom;

      @include transition(all 0.3s ease 0s);
    }
  }

  &:hover,
  &:focus {
    .icon::before {
      color: $white;
    }
  }

  &.collapsed {
    .icon::before {
      @include rotate(180deg);
    }
  }
}

.no-js {
  .btn-collapse {
    display: none;
    visibility: hidden;
  }
}

// External link specific adjustments.
@mixin btn-external-link() {
  padding-right: 2.2em;

  &::after {
    line-height: 1.4 !important;
    margin-left: 0.5em;
    position: absolute;
  }

  // Reset for '.btn-block'.
  &.btn-block {
    padding-right: 1em;

    &::after {
      line-height: inherit;
      position: static;
    }
  }

  // Call to action button.
  &.btn-ctn::after {
    line-height: 2 !important;
    position: absolute;
  }

  // Call to action button.
  &.btn-menu::after {
    line-height: 3.5 !important;
    position: absolute;
  }
}

.btn {
  &#{'[' + $external_link_pattern + ']'}:not(.is-internal) {
    &:not(#{$ec_url_patterns}) {
      @include btn-external-link();
    }
  }
}
