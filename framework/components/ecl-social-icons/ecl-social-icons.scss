/**
 * Social icons
 * @define icon-social
 */

// Brings in the long list for $ecl-social-icons.
@import './icons-list';

$icon-size: 40px;
$icon-size-small: 26px;
$img-path: '../images/social/';

// Social icons image.
@mixin generate-icon($selector, $img-path, $image, $img-hover, $extra: null, $extra_hover: null) {
  // Ignoring next 2 selectors since the dynamic selector is problematic for the linter.

  /* postcss-bem-linter: ignore */
  #{$selector}::before {
    background: url($img-path + $image) no-repeat $extra;
  }

  /* postcss-bem-linter: ignore */
  #{$selector}:hover::before {
    background-image: url($img-path + $img-hover) $extra_hover;
  }
}

.ecl-icon-social {
  display: block;
  margin: 0;
  min-height: $icon-size;
  padding-left: map-get($ecl-spacing, 'xl');
  padding-top: map-get($ecl-spacing, 'xxxs');
  position: relative;

  &::before {
    content: '';
    height: $icon-size;
    left: 0;
    position: absolute;
    top: 0;
    width: $icon-size;
  }
}

.ecl-icon-social--smaller {
  .ecl-icon-social {
    min-height: $icon-size-small;
    padding-left: $icon-size-small + 10px;
    padding-right: map-get($ecl-spacing, 'xxs');
    padding-top: 0;
  }

  .ecl-icon-social::before {
    height: $icon-size-small;
    width: $icon-size-small;
  }
}

@each $icon, $extra in $ecl-social-icons {
  @include generate-icon('.ecl-icon-social--' + $icon, $img-path, $icon + '.svg', $icon + '_hover.svg', #{$extra});
}
