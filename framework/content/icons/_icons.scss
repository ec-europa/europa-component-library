/**
 * Icons
 */

@import '~@ec-europa/europa-component-library-core/core';

$modifiers: (
  external: \e825,
  arrow-up: \e821,
  arrow-down: \e822,
  spinner: \e805,
  facebook: \e809,
  livestreaming: \e81c,
  location: \e81b,
  twitter: \e817,
  googleplus: \e80c,
  linkedin: \e810,
  rss: \e813,
  language: \e824,
  search: \e823,
  up: \e827,
  right: \e828,
  breadcrumb: \e828,
  down: \e81F,
  left: \e826,
  file: \e80a,
  audio: \e801,
  brochure: \e802,
  edit: \e807,
  image: \e80d,
  download: \e806,
  infographic: \e80f,
  multiple-files: \e820,
  organigram: \e811,
  package: \e812,
  slides: \e814,
  video: \e800,
  error: \e82F,
  success: \e816,
  warning: \e804,
  budget: \e81a,
  digital: \e80b,
  energy: \e818,
  euro: \e803,
  global: \e829,
  growth: \e82a,
  regulation: \e82b,
  feedback: \e82e,
  check: \e816,
  generic-lang: \e81e,
  tag-close: \e82c,
  calendar: \e81d,
  camera: \e900,
);

@mixin icon($modifier, $char: map-get($modifiers, $modifier)) {
  content: #{'\''}#{$char}#{'\''};

  &::before {
    @extend .icon--#{$modifier};
  }
}

%icon {
  &::before {
    display: inline-block;
    font-family: 'EuropaIcons';
    // Better Font Rendering
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    margin-right: 4px;
    speak: none;
    text-decoration: none;
    text-transform: none;
  }
}

// Should be used only with @extend.
%icon--after {
  display: inline-block;
  font-family: 'EuropaIcons';
  // Better Font Rendering
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  margin-left: 4px;
  speak: none;
  text-decoration: underline;
  text-transform: none;
}

// Remove the underline from a::after
// There is a bug in IE8-11, so using display:inline-block; alone won't
// work. The solution is by explicitly setting text-decoration:underline;
// for the ::after-content and then overwrite this rule again with
// text-decoration:none;
%icon--after {
  text-decoration: none;
}

%icon--blue-dark {
  color: #004494;
}

%icon--tag-close-hover {
  content: '\e82d';

  &::before {
    @extend %icon--tag-close-hover;
  }
}

/**
 * @define icon
 */

@font-face {
  font-family: 'EuropaIcons';
  src: url('./fonts/europa-icons/europa-icons.eot');
  src:
    url('./fonts/europa-icons/europa-icons.eot?#iefix') format('embedded-opentype'),
    url('./fonts/europa-icons/europa-icons.woff') format('woff'),
    url('./fonts/europa-icons/europa-icons.ttf') format('truetype'),
    url('./fonts/europa-icons/europa-icons.svg?#icon') format('svg');
}

.icon {
  @extend %icon;
}

.icon--after {
  @extend %icon--after;
}

// Icon component and modifiers.
@each $modifier, $char in $modifiers {
  %icon--#{$modifier},
  .icon--#{$modifier} {
    @include icon($modifier);
  }
}

.icon--blue-dark {
  @extend %icon--blue-dark;
}

.icon--tag-close-hover {
  @extend %icon--tag-close-hover;
}

.icon--yellowbg {
  background-color: $yellow-light;
  border-radius: 50%;
  display: inline-block;
  font-size: 14px;
  height: 40px;
  line-height: 40px;
  text-align: center;
  width: 40px;

  &::before {
    line-height: inherit;
    margin-right: 0;
  }
}

.icon--text-small {
  @include text-small();
}

.icon--margin-right {
  margin-right: 1.5em;
}

// States
// creating spinning animation for an icon
// in order to enable spinning apend .is-spinning class next to the .icon class
.is-spinning::before {
  @include animation(icon-spin-right 2s infinite linear);
}

@keyframes icon-spin-right {
  0% {
    @include rotate(0deg);
  }

  100% {
    @include rotate(359deg);
  }
}
