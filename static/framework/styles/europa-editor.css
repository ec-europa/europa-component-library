html {
  line-height: 1.15;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }
h1 {
  font-size: 2em;
  margin: 0.67em 0; }
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  overflow: visible; }
main {
  display: block; }
pre {
  font-family: monospace, monospace;
  font-size: 1em; }
a {
  -webkit-text-decoration-skip: objects; }
abbr[title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; }
b,
strong {
  font-weight: bolder; }
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }
small {
  font-size: 80%; }
svg:not(:root) {
  overflow: hidden; }
button,
input,
optgroup,
select,
textarea {
  margin: 0; }
button {
  overflow: visible;
  text-transform: none; }
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }
fieldset {
  padding: 0.35em 0.75em 0.625em; }
input {
  overflow: visible; }
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }
progress {
  display: inline-block;
  vertical-align: baseline; }
select {
  text-transform: none; }
textarea {
  overflow: auto; }
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }
details {
  display: block; }
summary {
  display: list-item; }
template {
  display: none; }
/*
 * Aliases
 */
/*
 * Background colors
 *
 * Note: in some cases, components can have other background colors (header-top, file, footer...)
 * These are the main background colors.
 */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 93.75%; }
  @media (min-width: 768px) {
    html {
      font-size: 112.5%; } }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

body {
  font-family: Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  text-rendering: optimizelegibility; }

[aria-hidden='true'] {
  display: none; }

img {
  height: auto;
  max-width: 100%; }

.ecl-editor h1 {
  margin: 0 0 1.66rem;
  padding: 0;
  color: #000;
  font-size: 2.22rem;
  font-weight: 600;
  line-height: 1.1; }

.ecl-editor h2 {
  margin: 0 0 1.66rem;
  padding: 0;
  color: #000;
  font-size: 1.67rem;
  font-weight: 600;
  line-height: 1.1; }

.ecl-editor h3 {
  margin: 0 0 1.66rem;
  padding: 0;
  color: #404040;
  font-size: 1.22rem;
  font-weight: 600;
  line-height: 1.1;
  max-width: 32em; }

.ecl-editor h4 {
  margin: 0 0 1.66rem;
  padding: 0;
  color: #404040;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.1;
  max-width: 32em; }

.ecl-editor h5 {
  margin: 0 0 1.66rem;
  padding: 0;
  color: #404040;
  font-size: 0.89rem;
  line-height: 1.1;
  max-width: 32em;
  text-transform: uppercase; }

.ecl-editor * + h1 {
  margin-top: 4.44rem; }

.ecl-editor * + h2 {
  margin-top: 3.33rem; }

.ecl-editor * + h3 {
  margin-top: 2.22rem; }

.ecl-editor ul,
.ecl-editor ol {
  line-height: 1.66;
  max-width: 32em; }

.ecl-editor p {
  line-height: 1.66;
  max-width: 32em; }

.ecl-editor blockquote {
  border-left: 8px solid #ffd617;
  font-size: 1.22rem;
  font-style: italic;
  line-height: 1.5;
  margin: 0;
  padding: 0.66rem 0 0.66rem 1.66rem; }
  .ecl-editor blockquote p {
    display: inline;
    line-height: inherit; }
  .ecl-editor blockquote::before {
    content: open-quote; }
  .ecl-editor blockquote::after {
    content: close-quote; }

.ecl-editor a {
  color: #004494;
  margin: 0;
  text-decoration: underline; }
  .ecl-editor a:hover, .ecl-editor a:focus {
    color: #000; }
  .ecl-editor a:visited {
    color: #550745; }

.ecl-editor table {
  border-collapse: collapse;
  border-width: 0;
  font-size: 0.89rem;
  margin: 0;
  table-layout: fixed;
  width: 100%; }
  .ecl-editor table th {
    background-color: transparent;
    color: #404040;
    font-weight: bold;
    text-align: left; }
  .ecl-editor table td,
  .ecl-editor table th {
    display: table-cell;
    padding: 0.89rem;
    vertical-align: middle; }

@media (max-width: 768px) {
  .ecl-editor table {
    /* stylelint-disable-next-line selector-no-qualifying-type */ }
    .ecl-editor table thead {
      display: none; }
    .ecl-editor table tr {
      border-bottom: 1px solid #9f9f9f; }
    .ecl-editor table tr:nth-of-type(2n) {
      background-color: inherit; }
    .ecl-editor table td {
      display: block;
      padding: 0.66rem;
      position: relative; }
    .ecl-editor table td[data-th-group] {
      margin-top: 2.22rem;
      padding-left: 1.66rem; }
    .ecl-editor table td::before {
      content: attr(data-th);
      display: block;
      font-weight: bold; } }

@media (min-width: 768px) {
  .ecl-editor table {
    /* Zebra striping */ }
    .ecl-editor table tr:nth-of-type(even) {
      background-color: #f5f5f5; }
    .ecl-editor table tbody {
      /* Hover */
      /* stylelint-disable-next-line max-nesting-depth */ }
      .ecl-editor table tbody tr:hover {
        background-color: #ebebeb; }
    .ecl-editor table thead {
      display: table-header-group;
      /* stylelint-disable-next-line max-nesting-depth, selector-max-compound-selectors */
      /* stylelint-disable-next-line max-nesting-depth */ }
      .ecl-editor table thead tr:first-child th {
        border-bottom: 1px solid #404040;
        vertical-align: top; }
      .ecl-editor table thead tr:last-child:not(:first-child) {
        border-bottom: 3px solid #404040; } }
/*# sourceMappingURL=data:application/json;base64, */