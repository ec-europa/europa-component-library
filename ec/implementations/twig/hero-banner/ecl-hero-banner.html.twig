{% spaceless %}

{#
  Parameters:
    - "type" (string) (default: 'default') Type of banner (can be 'default','image','image-shade','primary')
    - "title" (string) (default: '') Title of banner
    - "image" (string) (default: '') Image for banner (required for image banner type)
    - "description" (string) (default: '') Description of banner
    - "centered" (bool) (default: true) Define if banner should be centered
    - [DEPRECATED] "button" (associative array) (default: predefined structure) predefined structure for EC Button component
    - "link" (associative array) (default: predefined structure) predefined structure for EC Link component
    - "extra_classes" (string) (default: '')
    - "extra_attributes" (array) (default: []): format: [
        {
          "name" (string) (default: ''),
          "value" (optional) (string)
        ...
      ],
  - "_compliance_": (boolean) (default: false) Activates debug
  - "_compliance_inner_check_": (boolean) (default: false) inline compliance report
#}

{# Internal properties #}

{% set _type = type|default('default') %}
{% set _centered = centered ?? true %}
{% set _title = title|default('') %}
{% set _description = description|default('') %}
{% set _image = image|default('') %}
{% set _button = button|default({}) %}
{% set _link = link|default({}) %}
{% set _compliance = _compliance_|default(false) %}
{% set _compliance_inner_check = _compliance_inner_check_|default(false) %}
{% set _css_class = ['ecl-hero-banner ecl-hero-banner--' ~ _type]|join(' ') %}
{% set _extra_attributes = '' %}

{# Internal logic - Process properties #}

{% if _centered %}
  {% set _css_class = _css_class ~ ' ecl-hero-banner--centered' %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name ~ '="' ~ attr.value|e ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}
<section class="{{ _css_class }}"{{ _extra_attributes|raw }}>
  {% if _image is not empty and _type in ['image', 'image-shade'] %}
    <div class="ecl-hero-banner__image" style="background-image:url({{ _image }})"></div>
  {% endif %}
  <div class="ecl-container ecl-hero-banner__container">
    <div class="ecl-hero-banner__content">
      <h1 class="ecl-hero-banner__title">{{ _title }}</h1>
      {% if _description is not empty %}
        <p class="ecl-hero-banner__description">{{ _description }}</p>
      {% endif %}
      {% if _link is not empty %}
        {% include '@ecl-twig/ec-component-link/ecl-link.html.twig' with _link|merge({
          link: _link.link|merge({
            type: 'cta',
          }),
           _compliance_: _compliance,
           _compliance_inner_check_: true
        }) only %}
      {% elseif _button is not empty %}
        {% include '@ecl-twig/ec-component-button/ecl-button.html.twig' with _button|merge({
          extra_classes: 'ecl-hero-banner__button',
          _compliance_: _compliance,
          _compliance_inner_check_: true
        }) only %}
      {% endif %}
    </div>
  </div>
</section>

{# Validation #}

{% if _compliance %}
  {% include '@ecl-twig/ec-component-ecl-compliance/components/ecl-compliance-hero-banner.html.twig' with {
    type: _type,
    title: _title,
    description: _description,
    button: _button,
    link: _link,
    image: _image,
    _compliance_inner_check_: _compliance_inner_check
  } only %}
{% endif %}

{% endspaceless %}
