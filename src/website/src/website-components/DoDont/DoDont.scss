@use "sass:map";
@use '@ecl/theme-dev/maps/spacing';
@use '@ecl/theme-dev/maps/layout';
@use '@ecl/theme-dev/maps/typography';
@use '@ecl/theme-dev/maps/color';
@use '@ecl/theme-dev/maps/icon';

.dodont {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1rem;
  margin-right: -1rem;
}

.do,
.dont,
.caution {
  margin-top: map.get(spacing.$spacing, 'l');
}

.dodont .do,
.dodont .dont {
  box-sizing: border-box;
  min-height: 1px;
  padding-left: 1rem;
  padding-right: 1rem;
  position: relative;
  width: 100%;

  @media screen and (min-width: map.get(layout.$breakpoint, 'm')) {
    display: flex;
    flex: 0 0 50%;
    flex-direction: column;
    justify-content: stretch;
    max-width: 50%;
  }
}

.image-container {
  align-items: center;
  border: 1px solid map.get(color.$ec, 'grey-15');
  border-bottom-width: 0;
  display: flex;
  justify-content: center;
}

.image {
  // IE fix
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  // end of: IE fix
  height: auto;
  max-width: 100%;
}

.separator {
  flex-grow: 0;
  flex-shrink: 0;
  height: 0.5rem;
  width: 100%;
}

.do .separator {
  background-color: map.get(color.$ec, 'success');
}

.dont .separator {
  background-color: map.get(color.$ec, 'error');
}

.caution .separator {
  background-color: map.get(color.$ec, 'warning');
}

.container {
  background-color: map.get(color.$ec, 'grey-5');
  flex-grow: 1;
  flex-shrink: 0;
  padding: map.get(spacing.$spacing, 'm') map.get(spacing.$spacing, 'l');
}

.title {
  display: flex;
  font: map.get(typography.$font-prolonged, 'm');
  font-weight: map.get(typography.$font-weight, 'bold');
}
.do .title {
  color: map.get(color.$ec, 'success');
}
.dont .title {
  color: map.get(color.$ec, 'error');
}
.caution .title {
  color: map.get(color.$ec, 'warning');
}

.title__icon {
  fill: currentColor;
  height: map.get(icon.$icon, 's');
  margin-right: map.get(spacing.$spacing, 's');
  width: map.get(icon.$icon, 's');
}

.description {
  color: map.get(color.$ec, 'grey-100');
  font: map.get(typography.$font-prolonged, 'm');
  margin-top: map.get(spacing.$spacing, 'xs');
}

@media screen and (min-width: map.get(layout.$breakpoint, 's')) {
  .dont {
    margin-top: map.get(spacing.$spacing, 'l');
  }
}
