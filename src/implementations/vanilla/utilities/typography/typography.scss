/**
 * Typography utilities
 */

@use 'sass:map';
@use '@ecl/vanilla-layout-grid/mixins/breakpoints';

// Exposed variables
$theme: null !default;
$typography: null !default;

/*
* Headings
*/
.ecl-u-type-heading-1,
%ecl-heading-1 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading1', 'mobile') !important;
  font-weight: map.get($typography, 'heading1', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading1', 'desktop') !important;
    font-weight: map.get($typography, 'heading1', 'font-weight') !important;
  }
}

.ecl-u-type-heading-2,
%ecl-heading-2 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading2', 'mobile') !important;
  font-weight: map.get($typography, 'heading2', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading2', 'desktop') !important;
    font-weight: map.get($typography, 'heading2', 'font-weight') !important;
  }
}

.ecl-u-type-heading-3,
%ecl-heading-3 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading3', 'mobile') !important;
  font-weight: map.get($typography, 'heading3', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading3', 'desktop') !important;
    font-weight: map.get($typography, 'heading3', 'font-weight') !important;
  }
}

.ecl-u-type-heading-4,
%ecl-heading-4 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading4', 'mobile') !important;
  font-weight: map.get($typography, 'heading4', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading4', 'desktop') !important;
    font-weight: map.get($typography, 'heading4', 'font-weight') !important;
  }
}

.ecl-u-type-heading-5,
%ecl-heading-5 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading5', 'mobile') !important;
  font-weight: map.get($typography, 'heading5', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading5', 'desktop') !important;
    font-weight: map.get($typography, 'heading5', 'font-weight') !important;
  }
}

.ecl-u-type-heading-6,
%ecl-heading-6 {
  color: map.get($typography, 'heading-color');
  font: map.get($typography, 'heading6', 'mobile') !important;
  font-weight: map.get($typography, 'heading6', 'font-weight') !important;
  margin: map.get($typography, 'heading-margin') !important;

  @include breakpoints.up('m') {
    font: map.get($typography, 'heading6', 'desktop') !important;
    font-weight: map.get($typography, 'heading6', 'font-weight') !important;
  }
}

/*
* Paragraph
*/
.ecl-u-type-paragraph,
.ecl-u-type-paragraph-m {
  color: map.get($typography, 'text-color') !important;
  font: map.get($typography, 'paragraph', 'm') !important;
  max-width: var(--max-w) !important;
}

%ecl-paragraph {
  color: map.get($typography, 'text-color');
  font: map.get($typography, 'paragraph', 'm');
  max-width: var(--max-w) !important;
}

.ecl-u-type-paragraph-lead {
  color: map.get($typography, 'text-color');
  font: map.get($typography, 'paragraph', 'l') !important;
  max-width: var(--max-w) !important;
}

.ecl-u-type-paragraph-s {
  color: map.get($typography, 'text-color');
  font: map.get($typography, 'paragraph', 's') !important;
  max-width: var(--max-w) !important;
}

.ecl-u-type-paragraph-xs {
  color: map.get($typography, 'text-color');
  font: map.get($typography, 'paragraph', 'xs') !important;
  max-width: var(--max-w) !important;
}

/*
* Font size
*/
.ecl-u-type-xs {
  font: var(--f-xs) !important;
}

.ecl-u-type-s {
  font: var(--f-s) !important;
}

.ecl-u-type-m {
  font: var(--f-m) !important;
}

.ecl-u-type-l {
  font: var(--f-l) !important;
}

.ecl-u-type-xl {
  font: var(--f-xl) !important;
}

.ecl-u-type-2xl {
  font: var(--f-2xl) !important;
}

.ecl-u-type-3xl {
  font: var(--f-3xl) !important;
}

.ecl-u-type-4xl {
  font: var(--f-4xl) !important;
}

.ecl-u-type-5xl {
  font: var(--f-5xl) !important;
}

.ecl-u-type-ui-s {
  font: var(--f-ui-s) !important;
}

.ecl-u-type-ui-m {
  font: var(--f-ui-m) !important;
}

/*
* Font colour
*/
@each $key, $value in map.get($theme, 'color') {
  @if $key == 'white' or $key == 'black' {
    .ecl-u-type-color-#{$key} {
      color: map.get($theme, 'color', $key) !important;
    }
  } @else {
    .ecl-u-type-color-#{$key} {
      color: var(--ecl-color-#{$key}) !important;
    }
  }
}

/*
* Font style
*/
.ecl-u-type-regular {
  font-weight: map.get($theme, 'font-weight', 'regular') !important;
}

.ecl-u-type-bold {
  font-weight: map.get($theme, 'font-weight', 'bold') !important;
}

.ecl-u-type-capitalize {
  text-transform: capitalize !important;
}

.ecl-u-type-lowercase {
  text-transform: lowercase !important;
}

.ecl-u-type-uppercase {
  text-transform: uppercase !important;
}

.ecl-u-type-overline {
  text-decoration: overline !important;
}

.ecl-u-type-underline {
  text-decoration: underline !important;
}

.ecl-u-type-strike {
  text-decoration: line-through !important;
}

.ecl-u-type-none {
  text-decoration: none !important;
}

/*
* Text align
*/
.ecl-u-type-align-left {
  text-align: left !important;
}

.ecl-u-type-align-right {
  text-align: right !important;
}

.ecl-u-type-align-center {
  text-align: center !important;
}

// DEPRECATED
.ecl-u-type-6xl {
  font: var(--f-6xl) !important;
}

.ecl-u-type-prolonged-xs {
  font: var(--f-p-xs) !important;
}

.ecl-u-type-prolonged-s {
  font: var(--f-p-s) !important;
}

.ecl-u-type-prolonged-m {
  font: var(--f-p-m) !important;
}

.ecl-u-type-prolonged-l {
  font: var(--f-p-l) !important;
}

.ecl-u-type-prolonged-xl {
  font: var(--f-p-xl) !important;
}
