/**
 * Icons
 */

@use "sass:map";
@use '@ecl/theme-dev/maps/icon';
@use '@ecl/theme-dev/maps/color';
@use '@ecl/ec-base/mixins/import-once';

@mixin ecl-icons() {
  .ecl-icon {
    fill: currentColor;
    margin: 0;
    transform: scaleX(1) scaleY(1) rotateZ(0deg);
    transition: transform 300ms ease-in-out;
  }

  .ecl-icon--2xs {
    height: map.get(icon.$ecl-icon, '2xs');
    width: map.get(icon.$ecl-icon, '2xs');
  }

  .ecl-icon--xs {
    height: map.get(icon.$ecl-icon, 'xs');
    width: map.get(icon.$ecl-icon, 'xs');
  }

  .ecl-icon--s {
    height: map.get(icon.$ecl-icon, 's');
    width: map.get(icon.$ecl-icon, 's');
  }

  .ecl-icon--m {
    height: map.get(icon.$ecl-icon, 'm');
    width: map.get(icon.$ecl-icon, 'm');
  }

  .ecl-icon--l {
    height: map.get(icon.$ecl-icon, 'l');
    width: map.get(icon.$ecl-icon, 'l');
  }

  .ecl-icon--xl {
    height: map.get(icon.$ecl-icon, 'xl');
    width: map.get(icon.$ecl-icon, 'xl');
  }

  .ecl-icon--2xl {
    height: map.get(icon.$ecl-icon, '2xl');
    width: map.get(icon.$ecl-icon, '2xl');
  }

  .ecl-icon--fluid {
    height: map.get(icon.$ecl-icon, 'fluid');
    width: map.get(icon.$ecl-icon, 'fluid');
  }

  .ecl-icon--primary {
    fill: map.get(color.$ecl-color, 'primary');
  }

  .ecl-icon--inverted {
    fill: map.get(color.$ecl-color, 'white-100');
  }

  .ecl-icon--rotate-90 {
    transform: rotateZ(90deg);
  }

  .ecl-icon--rotate-180 {
    transform: rotateZ(180deg);
  }

  .ecl-icon--rotate-270 {
    transform: rotateZ(270deg);
  }

  .ecl-icon--flip-horizontal {
    transform: scaleX(-1);
  }

  .ecl-icon--flip-vertical {
    transform: scaleY(-1);
  }
}

// Use mixin
@include import-once.exports('vanilla-component-icon') {
  @include ecl-icons();
}
