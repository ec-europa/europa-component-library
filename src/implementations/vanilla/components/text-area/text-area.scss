/**
 * Textarea component
 * @define text-area
 */

@use "sass:map";
@use '@ecl/theme-dev/theme';
@use '@ecl/vanilla-layout-grid/mixins/breakpoints';

$_border-color: map.get(theme.$color, 'grey-75');
$_border-width: 1px;
$_border-color-focus: map.get(theme.$color, 'yellow-100');
$_border-width-focus: 3px;
$_padding-vertical: map.get(theme.$spacing, 's');
$_padding-horizontal: map.get(theme.$spacing, 's');

.ecl-text-area {
  appearance: none;
  background-color: map.get(theme.$color, 'white-100');
  border: $_border-width solid $_border-color;
  border-radius: 0;
  box-shadow: none;
  box-sizing: border-box;
  color: map.get(theme.$color, 'text');
  display: block;
  font: map.get(theme.$font, 'm');
  margin: 0;
  max-width: 100%;
  padding: calc(#{$_padding-vertical} - #{$_border-width})
    calc(#{$_padding-horizontal} - #{$_border-width});

  &:hover {
    outline: 1px solid map.get(theme.$color, 'blue-100');
    outline-offset: -1px;
  }

  &:active,
  &:focus {
    outline: $_border-width-focus solid $_border-color-focus;
    outline-offset: -3px;
  }
}

.ecl-text-area--m {
  width: 100%;

  @include breakpoints.up('m') {
    width: 50%;
  }

  @include breakpoints.up('l') {
    width: map.get(theme.$form, 'm');
  }
}

.ecl-text-area--l {
  width: 100%;

  @include breakpoints.up('l') {
    width: map.get(theme.$form, 'l');
  }
}

.ecl-text-area[disabled],
.ecl-text-area--disabled,
.ecl-text-area[readonly],
.ecl-text-area--readonly {
  background-color: map.get(theme.$color, 'grey-5');
  border-color: map.get(theme.$color, 'grey-50');
  cursor: not-allowed;

  &:hover {
    outline-width: 0;
  }
}

.ecl-text-area--invalid {
  border-color: map.get(theme.$color, 'error');
  box-shadow: none;

  &:hover {
    outline-color: map.get(theme.$color, 'red-130');
  }

  &:active,
  &:focus {
    outline-color: map.get(theme.$color, 'yellow-100');
  }
}
