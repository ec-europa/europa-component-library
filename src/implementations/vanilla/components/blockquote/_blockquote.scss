/**
 * Blockquote
 * @define blockquote
 */

@use 'sass:map';
@use '@ecl/vanilla-layout-grid/mixins/breakpoints';

// Exposed variables
$theme: null !default;
$blockquote: null !default;

// Internal variables
$text-max-width: 65ch; // Approximately 80 characters with the current font

.ecl-blockquote,
%ecl-blockquote {
  border-inline-start: map.get($blockquote, 'border-width') solid
    map.get($blockquote, 'border-color');
  border-radius: map.get($blockquote, 'border-radius');
  box-shadow: map.get($blockquote, 'shadow');
  margin: 0;
  padding: map.get($blockquote, 'padding');
}

.ecl-blockquote__citation,
%ecl-blockquote {
  color: map.get($blockquote, 'quote', 'color');
  font: map.get($blockquote, 'quote', 'font');
  font-style: italic;
  margin: 0;
  max-width: $text-max-width;
  quotes: '\201C' '\201D';

  &::before {
    content: open-quote;
  }

  &::after {
    content: close-quote;
  }
}

.ecl-blockquote__quote {
  margin: 0;
}

.ecl-blockquote__attribution,
%ecl-blockquote__author {
  margin-top: map.get($blockquote, 'author', 'margin');
  max-width: map.get($blockquote, 'text-max-width');
}

.ecl-blockquote__author,
%ecl-blockquote__author {
  color: map.get($blockquote, 'author', 'color');
  font: map.get($blockquote, 'author', 'font-mobile');
  font-weight: map.get($blockquote, 'author', 'font-weight');
  position: relative;
  padding-inline-start: map.get($blockquote, 'author', 'padding');

  &::before {
    align-items: center;
    color: map.get($blockquote, 'author', 'color');
    content: 'â€”';
    display: inline-flex;
    height: 100%;
    left: 0;
    position: absolute;
    top: -1px;
  }
}

.ecl-blockquote__image,
%ecl-blockquote__image {
  aspect-ratio: 1/1;
  height: 120px;
  margin-top: map.get($blockquote, 'image', 'margin-mobile');
  object-fit: cover;
  width: 120px;
}

/* stylelint-disable-next-line order/order */
@include breakpoints.up('l') {
  .ecl-blockquote,
  %ecl-blockquote {
    border-inline-start-width: 0;
    border-radius: 0;
    box-shadow: none;
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-end;
    padding: 0;
  }

  .ecl-blockquote__body {
    border-inline-start: map.get($blockquote, 'border-width') solid
      map.get($blockquote, 'border-color');
    border-radius: map.get($blockquote, 'border-radius');
    box-shadow: map.get($blockquote, 'shadow');
    padding: map.get($blockquote, 'padding');
  }

  .ecl-blockquote__author,
  %ecl-blockquote__author {
    font: map.get($blockquote, 'author', 'font-desktop');
    font-weight: map.get($blockquote, 'author', 'font-weight');
  }

  .ecl-blockquote__image,
  %ecl-blockquote__image {
    margin-inline-end: map.get($blockquote, 'image', 'margin-desktop');
    margin-top: 0;
  }
}
