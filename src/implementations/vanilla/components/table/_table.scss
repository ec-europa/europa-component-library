/**
 * Table component
 * @define table
 */

@use 'sass:map';
@use '@ecl/theme-dev/theme';
@use '@ecl/vanilla-layout-grid/mixins/breakpoints';

$_table-color: null !default;
$_header-border-color: null !default;
$_row-border-color: null !default;
$_sort-icon-color: null !default;
$_sort-icon-color-active: null !default;
$_sort-arrow-margin-top: null !default;

.ecl-table,
%ecl-table {
  border-collapse: collapse;
  color: $_table-color;
  font: map.get(theme.$font, 'm');
  margin: 0;
  width: 100%;
}

.ecl-table__head,
%ecl-table__head {
  display: none;
}

.ecl-table__cell,
%ecl-table__cell {
  border-top: 1px solid $_row-border-color;
  display: flex;
  padding: map.get(theme.$spacing, 's');

  &::before {
    background-color: map.get(theme.$color, 'blue-5');
    border-inline-end: 2px solid $_header-border-color;
    content: attr(data-ecl-table-header);
    display: block;
    flex-basis: 10rem;
    flex-grow: 0;
    flex-shrink: 0;
    font-weight: map.get(theme.$font-weight, 'bold');
    margin-bottom: -#{map.get(theme.$spacing, 's')};
    margin-inline-start: -#{map.get(theme.$spacing, 's')};
    margin-inline-end: map.get(theme.$spacing, 's');
    margin-top: -#{map.get(theme.$spacing, 's')};
    padding-bottom: map.get(theme.$spacing, 's');
    padding-inline-start: map.get(theme.$spacing, 's');
    padding-inline-end: map.get(theme.$spacing, 'm');
    padding-top: map.get(theme.$spacing, 's');
  }

  &:last-of-type {
    border-bottom: 1px solid $_row-border-color;
    margin-bottom: map.get(theme.$spacing, 'l');
  }
}

%ecl-table__cell-no-data {
  &::before {
    flex-basis: 0;
    padding: 0;
  }
}

/* stylelint-disable-next-line order/order */
@include breakpoints.up('l') {
  .ecl-table__head,
  %ecl-table__head {
    background-color: map.get(theme.$color, 'blue-5');
    display: table-header-group;
  }

  .ecl-table__header,
  %ecl-table__header {
    font-weight: map.get(theme.$font-weight, 'bold');
    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');
    text-align: start;
    vertical-align: bottom;
  }

  .ecl-table__row,
  %ecl-table__row {
    border-bottom: 1px solid $_row-border-color;
    border-top-width: 0;
  }

  .ecl-table__head .ecl-table__row:first-child {
    border-bottom: 2px solid $_header-border-color;

    .ecl-table__header {
      padding-top: map.get(theme.$spacing, 'l');
    }
  }

  .ecl-table__cell,
  %ecl-table__cell {
    border-width: 0;
    display: table-cell;
    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xl')
      map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');

    &::before {
      display: none;
    }
  }
}

// Zebra
.ecl-table--zebra {
  .ecl-table__cell:nth-of-type(even) {
    background-color: map.get(theme.$color, 'grey-5');
  }
}

/* stylelint-disable-next-line order/order */
@include breakpoints.up('l') {
  .ecl-table--zebra {
    .ecl-table__body .ecl-table__row:nth-of-type(even) {
      background-color: map.get(theme.$color, 'grey-5');
    }

    .ecl-table__cell:nth-of-type(even) {
      background-color: transparent;
    }
  }
}

// Multi
.ecl-table__cell[data-ecl-table-header-group] {
  // padding-top + line-height + padding-bottom + border + cell padding-top
  padding-top: calc(
    #{map.get(theme.$spacing, 's')} + #{map.get(theme.$line-height, 'm')} + #{map.get(
        theme.$spacing,
        's'
      )} + 1px + #{map.get(theme.$spacing, 's')}
  );
  position: relative;

  &::after {
    background-color: map.get(theme.$color, 'blue-5');
    border-bottom: 1px solid $_row-border-color;
    content: attr(data-ecl-table-header-group);
    display: block;
    font-weight: map.get(theme.$font-weight, 'bold');
    left: 0;
    padding-bottom: map.get(theme.$spacing, 's');
    padding-inline-start: map.get(theme.$spacing, 's');
    padding-top: map.get(theme.$spacing, 's');
    position: absolute;
    top: 0;
    width: calc(100% - #{map.get(theme.$spacing, 's')});
  }
}

.ecl-table__cell--group {
  &::before {
    background-color: map.get(theme.$color, 'white-100');
    border-inline-end-color: map.get(theme.$color, 'white-100');
    margin-inline-start: -#{map.get(theme.$spacing, 's')};
    margin-inline-end: 0;
    padding-inline-start: map.get(theme.$spacing, 'l');
  }
}

/* stylelint-disable-next-line order/order */
@include breakpoints.up('l') {
  .ecl-table__head .ecl-table__row:not(:first-child) {
    background-color: map.get(theme.$color, 'white-100');
    border-bottom-width: 0;
  }

  .ecl-table__head
    .ecl-table__row:not(:first-child)
    .ecl-table__header:not(:empty) {
    background-color: map.get(theme.$color, 'blue-5');
  }

  .ecl-table__cell[data-ecl-table-header-group]::after {
    display: none;
  }

  .ecl-table__cell--group {
    padding-inline-start: map.get(theme.$spacing, 's');
  }

  .ecl-table__cell[data-ecl-table-header-group] {
    padding-top: map.get(theme.$spacing, 's');
  }
}

// SortTable
.ecl-table__header[data-ecl-table-sort-toggle] {
  cursor: pointer;
  padding-inline-start: calc(
    #{map.get(theme.$spacing, 'm')} + #{map.get(theme.$icon, '2xs')} + #{map.get(
        theme.$spacing,
        'xs'
      )}
  );
  position: relative;
}

.ecl-table__arrow {
  left: map.get(theme.$spacing, '2xs');
  margin-top: $_sort-arrow-margin-top;
  position: absolute;
}

.ecl-table__icon {
  left: 0;
  position: absolute;
}

.ecl-table__icon-up {
  fill: $_sort-icon-color;
  top: 0;
}

.ecl-table__icon-down {
  fill: $_sort-icon-color;
  top: map.get(theme.$icon, '2xs');
  transform: rotate(180deg);
}

.ecl-table__header[aria-sort='ascending'] {
  .ecl-table__icon-down {
    fill: $_sort-icon-color-active;
  }
}

.ecl-table__header[aria-sort='descending'] {
  .ecl-table__icon-up {
    fill: $_sort-icon-color-active;
  }
}
