/**
 * Pagination
 * @define pagination
 * TODO
 */

@use 'sass:map';
@use '@ecl/vanilla-layout-grid/mixins/breakpoints';

// Exposed variables
$theme: null !default;
$pagination: null !default;

// Internal variables
$_text-color: map.get($theme, 'color', 'blue-100');
$_border-color: map.get($theme, 'color', 'black-100');
$_current-border-color: map.get($theme, 'color', 'black-100');

@mixin item-styles {
  align-items: center;
  color: map.get($pagination, 'item-default-color');
  justify-content: center;
  box-sizing: border-box;
  display: flex;
  height: 3rem;
  width: 3rem;

  &:hover {
    background: map.get($pagination, 'item-background-hover');
    border: 1px solid map.get($pagination, 'item-border-hover');
    color: map.get($pagination, 'item-hover-color');
    text-decoration: none;
  }

  &:focus-visible {
    background: transparent;
    border: 2px solid var(--c-p);
    outline: none;
  }
}

.ecl-pagination {
  background-color: map.get($pagination, 'background-color');
  border-radius: map.get($pagination, 'border-radius');
  border-top: map.get($pagination, 'border-width') solid
    map.get($pagination, 'border-color');
  color: $_text-color;
  font: map.get($theme, 'font-prolonged', 'm');
  margin: 0;
  padding-top: var(--s-xl);
}

.ecl-pagination__list {
  align-items: center;
  display: flex;
  justify-content: space-between;
  list-style: none;
  margin: 0;
  padding-inline-start: 0;
  position: relative;
}

.ecl-pagination__item {
  display: none;
}

.ecl-pagination__link {
  @include item-styles;
}

.ecl-pagination__link,
.ecl-pagination__text {
  padding: map.get($theme, 'spacing', '2xs');
}

.ecl-pagination__item--previous,
.ecl-pagination__item--next {
  display: flex;
  flex-basis: 0;
  flex-grow: 1;

  .ecl-pagination__link {
    color: var(--c-p);
  }
}

.ecl-pagination__item--next {
  justify-content: flex-end;
}

.ecl-pagination__item--current {
  color: map.get($pagination, 'current-text-color-mobile');
  display: flex;
  font-weight: map.get($pagination, 'current-font-weight');
  position: relative;
}

.ecl-pagination__text--summary {
  display: none;
}

.ecl-pagination__text--full {
  display: block;
}

/* stylelint-disable-next-line order/order */
@include breakpoints.up('m') {
  .ecl-pagination {
    padding-inline-start: 0;
    padding-inline-end: 0;
  }

  .ecl-pagination__list {
    justify-content: center;
  }

  .ecl-pagination__item {
    display: flex;
    flex-grow: 0;
    margin-inline-end: var(--s-2xs);

    &--current {
      @include item-styles;

      background: map.get($pagination, 'current-background');
      border-radius: map.get($pagination, 'current-radius');
      color: map.get($pagination, 'current-text-color-desktop');
    }

    &:last-child {
      margin-inline-end: 0;
    }
  }

  .ecl-pagination__item--previous,
  .ecl-pagination__item--next {
    flex-basis: auto;
  }

  @if map-has-key($pagination, 'before') {
    .ecl-pagination__item--current::before {
      border: map.get($pagination, 'current-border-width solid')
        $_current-border-color;
      border-radius: 10rem;
      content: '';
      display: block;
      height: calc(
        #{map.get($theme, 'line-height-prolonged', 'm')} +
          (2 * #{map.get($pagination, 'current-border-width')})
      );
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      width: calc(
        #{map.get($theme, 'line-height-prolonged', 'm')} +
          (2 * #{map.get($pagination, 'current-border-width')})
      );
    }
  }

  .ecl-pagination__text--summary {
    display: block;
  }

  .ecl-pagination__text--full {
    display: none;
  }
}
