/**
 * Button
 * @define button
 */

@use 'sass:map';
@use '@ecl/vanilla-utility-screen-reader/screen-reader';

// Exposed variables
$theme: null !default;
$button: null !default;

// Internal variables
$min-width: 44px; // According to COMM every interactive element should be at least 44px large

.ecl-button,
%ecl-button {
  appearance: none;
  background: none;
  border-radius: map.get($button, 'radius');
  border-width: 0;
  cursor: pointer;
  display: inline-block;
  font: var(--f-m);
  margin: 0;
  min-width: $min-width;
  padding: calc(
      #{map.get($button, 'padding-vertical')} - #{map.get(
          $button,
          'border-width'
        )}
    )
    calc(
      #{map.get($button, 'padding-horizontal')} - #{map.get(
          $button,
          'border-width'
        )}
    );
  text-decoration: none;

  &:hover {
    box-shadow: map.get($button, 'shadow');
    text-decoration: none;
  }

  &:focus-visible {
    outline-offset: calc(0px - #{map.get($button, 'outline-width')} - 2px);
    text-decoration: none;
  }

  &:active {
    outline-width: 0;
  }

  &[disabled],
  &[disabled]:hover {
    cursor: not-allowed;
    opacity: 0.5;
    text-decoration: none;
  }
}

.ecl-button__container {
  align-items: center;
  display: flex;
}

.ecl-button__icon {
  flex-shrink: 0;
}

.ecl-button__icon ~ .ecl-button__label,
.ecl-button__label ~ .ecl-button__icon {
  margin-inline-start: var(--s-xs);
}

// Icon only
$size-icon-only: calc(
  #{map.get($button, 'padding-vertical')} * 2 + #{map.get(
      $theme,
      'line-height',
      'm'
    )} - #{map.get($button, 'border-width')} * 2
);

.ecl-button--icon-only {
  padding: 0;

  .ecl-button__container {
    height: $size-icon-only;
    justify-content: center;
    width: $size-icon-only;
  }

  .ecl-button__label {
    @include screen-reader.sr-only;
  }

  .ecl-button__icon {
    margin: 0;
  }
}

/**
* Button styles
*/
@mixin button($variant: null) {
  background-color: map.get($button, #{$variant}, 'background');
  border: map.get($button, 'border-width') solid
    map.get($button, #{$variant}, 'border-color');
  color: map.get($button, #{$variant}, 'color');

  &:hover {
    background-color: map.get($button, #{$variant}, 'background-hover');
    border-color: map.get($button, #{$variant}, 'border-color-hover');
    color: map.get($button, #{$variant}, 'color-hover');
  }

  &:focus-visible {
    background-color: map.get($button, #{$variant}, 'background-focus');
    border-color: map.get($button, #{$variant}, 'border-color-focus');
    color: map.get($button, #{$variant}, 'color-focus');
    outline: map.get($button, 'outline-width') solid
      map.get($button, #{$variant}, 'outline-color');
  }

  &:active {
    background-color: map.get($button, #{$variant}, 'background-active');
    border-color: map.get($button, #{$variant}, 'border-color-active');
    color: map.get($button, #{$variant}, 'color-active');
  }

  @if map-has-key($button, #{$variant}, 'border-width-hover') {
    &:hover {
      border-width: map.get($button, #{$variant}, 'border-width-hover');
      padding: calc(
          #{map.get($button, 'padding-vertical')} -
            #{map.get($button, #{$variant}, 'border-width-hover')}
        )
        calc(
          #{map.get($button, 'padding-horizontal')} -
            #{map.get($button, #{$variant}, 'border-width-hover')}
        );
    }

    &.ecl-button--icon-only:hover {
      padding: calc(
        #{map.get($button, 'border-width')} -
          #{map.get($button, #{$variant}, 'border-width-hover')}
      );
    }
  }
}

.ecl-button--primary {
  @include button(primary);
}

// stylelint-disable plugin/selector-bem-pattern
.ecl-button--secondary,
%ecl-button {
  @include button(secondary);

  &:focus-visible {
    box-shadow: map.get($button, 'secondary', 'focus-shadow');
  }
}
// stylelint-enable plugin/selector-bem-pattern

.ecl-button--tertiary {
  @include button(tertiary);
}

.ecl-button--cta {
  @include button(cta);
}

.ecl-button--ghost {
  @include button(ghost);
}

.ecl-button--ghost-inverted {
  @include button(ghost-inverted);
}
