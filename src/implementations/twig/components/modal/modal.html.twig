{% apply spaceless %}

{#
  Parameters:
    - "id" (string) (default: ''): id of the modal
    - "toggle_id" (string) (default: ''): id of the element to toggle the modal
    - "variant" (string) (default: ''): could be empty, 'information, 'success', 'warning' or 'error'
    - "size" (string) (default: 'l'): Size of the modal. Could be 's' or 'l' 
    - "icon_path" (string) (default: '') Path to the icon sprite
    - "close" (object of type "button") (default: {}): close button; label has to be provided for screen reader
    - "buttons" (array) (default: {}) Array of ECL Button, displayed in the modal footer
    - "extra_classes" (string) (default: '')
    - "extra_attributes" (array) (default: []): format: [
        {
          "name" (string) (default: ''),
          "value" (optional) (string)
        },
        ...
      ],
  Blocks:
    - "header": free block to put any content in the modal header
    - "body": free block to put any content in the modal body (scrollable)
    - "body_fixed": free block to put any content at the bottom of the modal body (not scrollable)
    - "footer": free block to put any content in the modal footer
#}

{# Internal properties #}

{% set _id = id|default('') %}
{% set _toggle_id = toggle_id|default('') %}
{% set _variant = variant|default('') %}
{% set _size = size|default('l') %}
{% set _css_class = 'ecl-modal' %}
{% set _icon_path = icon_path|default('') %}
{% set _close = close|default({}) %}
{% set _header = header|default('') %}
{% set _header_icon = '' %}
{% set _body = body|default('') %}
{% set _body_fixed = body_fixed|default('') %}
{% set _footer = footer|default('') %}
{% set _buttons = buttons|default({}) %}

{# Internal logic - Process properties #}

{% if _variant is not empty %}
  {% set _css_class = _css_class ~ ' ecl-modal--' ~ _variant %}
  {% set _header_icon = _variant %}
{% endif %}

{% if _size == 's' %}
  {% set _size_class = 'ecl-col-12 ecl-col-m-6 ecl-col-l-5' %}
{% else %}
  {% set _size_class = 'ecl-col-12 ecl-col-m-10 ecl-col-l-8' %}
{% endif %}
{% set _css_class = _css_class ~ ' ecl-modal--' ~ _size %}

{% if _header is not empty or block('header') is not empty %}
  {% set extra_attributes = extra_attributes|default([])|merge([
    { name: 'aria-labelledby', value: _id ~ '-header'}
  ]) %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') ~ '="' ~ attr.value|e('html_attr') ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}

<dialog 
  data-ecl-auto-init="Modal" 
  data-ecl-modal-toggle="{{ _toggle_id }}" 
  id="{{ _id }}" 
  aria-modal="true"
  class="{{ _css_class }}"
  {{ _extra_attributes|raw }}
>
  <div class="ecl-modal__container ecl-container">
    {% set _content_class = 'ecl-modal__content ' ~ _size_class %}
    <div class="{{ _content_class }}">
      <header class="ecl-modal__header">
        {% if _header_icon is not empty and _icon_path is not empty %}
          {% include '@ecl/icon/icon.html.twig' with {
            icon: {
              path: _icon_path,
              name: _header_icon,
              size: 'l',
            },
            extra_classes: 'ecl-modal__icon',
          } only %}
        {% endif %}

        {% if _header is not empty or block('header') is not empty %}
          <div class="ecl-modal__header-content" id="{{ _id }}-header">
            {%- block header %}{{ _header }}{% endblock -%}
          </div>
        {% endif %}

        {% if _close is not empty %}
          {% include '@ecl/button/button.html.twig' with _close|merge({
            type: 'button',
            variant: 'tertiary',
            hide_label: true,
            extra_classes: 'ecl-modal__close',
            extra_attributes: [{
              name: 'data-ecl-modal-close',
            }],
          }) only %}
        {% endif %}
      </header>

      {% if _body is not empty or block('body') is not empty or _body_fixed is not empty or block('body_fixed') is not empty %}
      <div class="ecl-modal__body">
        {% if _body is not empty or block('body') is not empty %}
        <div class="ecl-modal__body-scroll" data-ecl-modal-scroll>
          {%- block body %}{{ _body }}{% endblock -%}
        </div>
        <div class="ecl-modal__body-overflow" aria-hidden="true"></div>
        {% endif %}

        {% if _body_fixed is not empty or block('body_fixed') is not empty %}
        <div class="ecl-modal__body-fixed">
          {%- block body_fixed %}{{ _body_fixed }}{% endblock -%}
        </div>
        {% endif %}
      </div>
      {% endif %}

      {% if _buttons is not empty or _footer is not empty or block('footer') is not empty %}
      <footer class="ecl-modal__footer">
        {%- block footer -%}
          {{- _footer -}}

          {% if _buttons is not empty %}
          <div class="ecl-modal__footer-content">
            {% for _button in _buttons %}
              {% set _button_extra_classes = 'ecl-modal__button' %}
              {% if _button.extra_classes is not empty %}
                {% set _button_extra_classes = _button_extra_classes ~ ' ' ~ _button.extra_classes %}
              {% endif %}
              {% include '@ecl/button/button.html.twig' with _button|merge({
                extra_classes: _button_extra_classes,
              }) only %}
            {% endfor %}
          </div>
          {% endif %}
        {%- endblock -%}
      </footer>
      {% endif %}
    </div>
  </div>
</dialog>

{% endapply %}
