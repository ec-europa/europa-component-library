{% spaceless %}

{#
  Parameters:
    - "card" (associative array) (default: predefined structure): format:
        {
          type: '', (can be 'tile'): Card type
          description: '', (string) (default: ''): Description of card
          meta: [], (array) (default: []): Meta's for the Card
          title: {}, (associative array) (default: {}): Predefined structure compatible with Link component. If Card type is a 'tile', only label property is required.
          image: {}, (associative array) (default: ''): Url/path and alternate text of the background image (non required if Card type is a 'tile')
          tags: [], (array) (default: []): List of tags compatible with EC Tag component structure
          infos: [], (array) (default: []): format: [
            {
              label: '', (string) (default: ''): Label of info
              icon: {}, (associative array) (default: {}): Predefined structure compatible with EC Icon
            },
            ...
          ]
          links: [], (array) (default: []): List of links (required if Card type is a 'tile'). Format: [
            {
              label: (string) (default: ''): Label of link
              path: (string) (default: ''): Link url (href attribute)
            },
            ...
          ]
        },
    - "icon_path" (string) (default: '') Path to the icons file
    - "extra_classes" (string) (default: '')
    - "extra_attributes" (array) (default: []): format: [
        {
          "name" (string) (default: ''),
          "value" (optional) (string)
        ...
      ],
#}

{# Internal properties #}

{% set _card = {
  type: '',
  description: '',
  meta: [],
  title: {},
  image: {},
  infos: [],
  tags: [],
  links: []
} %}

{% if card is defined %}
  {% set _card = _card|merge(card) %}
{% endif %}

{% set _css_class = 'ecl-card' %}
{% set _extra_attributes = '' %}
{% set _icon_path = icon_path|default('') %}

{# Set class for card different than default #}

{% if _card.type is not empty %}
  {% set _css_class = _css_class ~ ' ecl-card--' ~ _card.type %}
{% endif %}

{# Internal logic - Process properties #}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name ~ '="' ~ attr.value|e('html_attr') ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}

<article class="{{ _css_class }}"{{ _extra_attributes }}>
  <header class="ecl-card__header">
    {% if _card.image.src is defined and _card.image.src is not empty %}
      {% set _card_img_aria_label = _card.image.alt is defined and _card.image.alt is not empty ? 'aria-label="' ~ _card.image.alt ~ '"' : '' %}
      <div class="ecl-card__image" {{ _card_img_aria_label }} role="img" style="background-image:url('{{ _card.image.src }}')"></div>
    {% endif %}
    {% if _card.meta is not empty %}
      <div class="ecl-card__meta">{{ _card.meta|join(" | ") }}</div>
    {% endif %}
    <h1 class="ecl-card__title">
      {%- if _card.title.path %}
        {% include '@ecl/link/link.html.twig' with {
          link: _card.title,
          icon_path: _icon_path
        } only %}
      {% else %}
        {{- _card.title.label }}
      {%- endif -%}
    </h1>
  </header>

  {% if _card.description is not empty or _card.links is not empty %}
  <div class="ecl-card__body">
  {% endif %}
  {% if _card.description is not empty %}
    <div class="ecl-card__description">{{ _card.description }}</div>
  {% endif %}
  {% if _card.links is defined and _card.links is not empty and _card.links is iterable %}
    <ul class="ecl-card__link-container">
      {% for link in _card.links %}
        <li class="ecl-card__link-item">
          {% include '@ecl/link/link.html.twig' with {
            link: link|merge({ type: 'standalone' }),
            extra_classes: 'ecl-card__link',
            icon_path: _icon_path
          } only %}
        </li>
      {% endfor %}
    </ul>
  {% endif %}
  {% if _card.description is not empty or _card.links is not empty %}
  </div>
  {% endif %}
  <footer class="ecl-card__footer">
    {% if _card.infos is defined and _card.infos is not empty and _card.infos is iterable %}
      <ul class="ecl-card__info-container">
        {% for info in _card.infos %}
          {% if info.icon is defined and info.icon is not empty %}
            {% set _icon = info.icon|merge({ size: 'xs' }) %}
            {% if _icon_path is not empty %}
              {% set _icon = _icon|merge({ path: _icon_path }) %}
            {% else %}
              {% set _icon_path = _icon.path|default('') %}
            {% endif %}
          {% endif %}
          <li class="ecl-card__info-item">
            {% include '@ecl/icon/icon.html.twig' with {
              icon: _icon|default({}),
            } only %}
            <span class="ecl-card__info-label">{{ info.label }}</span>
          </li>
        {% endfor %}
      </ul>
    {% endif %}
    {% if _card.tags is defined and _card.tags is not empty and _card.tags is iterable %}
      <ul class="ecl-card__tag-container">
        {% for tag in _card.tags %}
          <li class="ecl-card__tag-item">
            {% include '@ecl/tag/tag.html.twig' with {
              tag: tag,
              extra_classes: 'ecl-card__tag',
              icon_path: _icon_path
            } only %}
          </li>
        {% endfor %}
      </ul>
    {% endif %}
  </footer>
</article>

{% endspaceless %}
