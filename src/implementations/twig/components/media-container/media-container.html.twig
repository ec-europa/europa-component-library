{% apply spaceless %}
{#
  Parameters:
  - "image" (string) (default: ''),
  - "picture" (associative array) (default: {}): Image for media container, following ECL Picture structure
  - "full_width": (bool) (default: false) Full width media container (inside the grid container)
  - "extra_classes" (string) (default: ''),
  - "sources" (array) (default: []): format: [
      {
        "src" (string) (default: ''),
        "type" (string) (default: ''),
      },
      ...
    ],
  - "tracks" (array) (default: []): format: [
      {
        "src" (string) (default: ''),
        "kind" (string) (default: ''),
        "src_lang" (string) (default: ''),
        "label" (string) (default: ''),
      },
      ...
    ],
  - "description" (string) (default: ''),
  - "extra_attributes" (array) (default: []): format: [
      {
        "name" (string) (default: ''),
        "value" (string) (default: '')
      },
      ...
    ]
  - "ratio" (string) ('')

  Blocks:
    - "embedded_media"

  Deprecated:
    - "alt" (string) (default: ''),
#}

{# Internal properties #}

{% set _css_class = 'ecl-media-container' %}
{% set _image = image|default('') %}
{% set _full_width = full_width|default(false) %}
{% set _description = description|default('') %}
{% set _alt = alt|default('') %}
{% set _embedded_media = embedded_media|default('') %}
{% set _picture = picture|default({}) %}
{% set _extra_attributes = embedded_media ? [
  'data-ecl-media-container="true"',
  'data-ecl-auto-init="MediaContainer"']|join(' ') : ''
%}
{% set _ratio = ratio|default('') %}
{% set _sources = sources|default({}) %}
{% set _tracks = tracks|default({}) %}

{# Internal logic - Process properties #}

{% if _picture.img is empty and _image is not empty %}
  {% set _picture = {
      img: {
        src: _image,
      },
    }
  %}
  {% if _alt is not empty %}
    {% set _picture = _picture|merge({
      img: _picture.img|merge({
        alt: _alt
      })
    }) %}
  {% endif %}
{% endif %}

{% if _full_width %}
  {% set _css_class = _css_class ~ ' ecl-media-container--full-width' %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') ~ '="' ~ attr.value|e('html_attr') ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}

<figure class="{{ _css_class }}"{{ _extra_attributes|raw }}>
{% if _embedded_media is not empty %}
  {% set _embed_class = _ratio ? "ecl-media-container__media ecl-media-container__media--ratio-" ~ _ratio : "ecl-media-container__media" %}
  <div class="{{_embed_class}}">
    {%- block embedded_media _embedded_media -%}
  </div>
{% elseif _sources is not empty and _sources is iterable %}
  <video
    class="ecl-media-container__media"
    controls
    poster="{{ _image }}"
  >
{% for source in _sources %}
  <source type="{{ source.type }}" src="{{ source.src }}" />
{% endfor %}
  {% if _tracks is not empty and _tracks is iterable %}
  {% for track in _tracks %}
    <track
      kind="{{ track.kind }}"
      label="{{ track.label }}"
      src="{{ track.src }}"
      srclang="{{ track.src_lang }}"
    />
  {% endfor %}
  {% endif %}
  </video>
{% else %}
  {% include '@ecl/picture/picture.html.twig' with {
    picture: _picture,
    extra_classes: 'ecl-media-container__picture',
    extra_image_classes: 'ecl-media-container__media',
  } only %}
{% endif %}
{% if _description is not empty %}
  <figcaption class="ecl-media-container__caption">
    {{- _description -}}
  </figcaption>
{% endif %}
</figure>

{% endapply %}
