{% apply spaceless %}
{#
  Parameters:
  - "picture" (associative array) (default: {}): Image for media container, following ECL Picture structure
  - "full_width": (bool) (default: false) Full width media container (inside the grid container)
  - "sources" (array) (default: []): format: [
      {
        "src" (string) (default: ''),
        "type" (string) (default: ''),
      },
      ...
    ],
  - "tracks" (array) (default: []): format: [
      {
        "src" (string) (default: ''),
        "kind" (string) (default: ''),
        "src_lang" (string) (default: ''),
        "label" (string) (default: ''),
      },
      ...
    ],
  - "image" (string) (default: ''): Image to be used as the video placeholder 
  - "title" (string) (default: ''): Media title
  - "description" (string) (default: ''),
  - "sr_video_player" (string) (default: ''): additional label for the video player; for screen readers
  - "sr_video_audio" (string) (default: ''): additional text to indicate if there is an audio description; for screen readers
  - "ratio" (string) ('')
  - "expandable" (associative array) (default: {}): Optional expandable block, following ECL Expandable structure
  - "extra_classes" (string) (default: ''),
  - "extra_attributes" (array) (default: []): format: [
      {
        "name" (string) (default: ''),
        "value" (string) (default: '')
      },
      ...
    ]

  Blocks:
    - "embedded_media"
#}

{# DEPRECATED 
  - "sr_video_label" (string) (default: ''): additional label for the video items; for screen readers
#}

{# Internal properties #}

{% set _css_class = 'ecl-media-container' %}
{% set _expandable_class = 'ecl-media-container__expandable' %}
{% set _embed_class = 'ecl-media-container__media' %}
{% set _figure_class = 'ecl-media-container__figure' %}
{% set _image = image|default('') %}
{% set _full_width = full_width|default(false) %}
{% set _description = description|default('') %}
{% set _title = title|default('') %}
{% set _sr_video_player = sr_video_player|default('') %}
{% set _sr_video_audio = sr_video_audio|default('') %}
{% set _embedded_media = embedded_media|default('') %}
{% set _picture = picture|default({}) %}
{% set _extra_attributes = embedded_media ? [
  'data-ecl-media-container="true"',
  'data-ecl-auto-init="MediaContainer"']|join(' ') : ''
%}
{% set _ratio = ratio|default('') %}
{% set _sources = sources|default({}) %}
{% set _tracks = tracks|default({}) %}
{% set _expandable = expandable|default({}) %}

{# DEPRECATED #}
{% set _sr_video_label = sr_video_label|default('') %}
{% if _sr_video_player is empty and _sr_video_label is not empty %}
  {% set _sr_video_player = _sr_video_label %}
{% endif %}

{# Internal logic - Process properties #}

{% if _picture.img is empty and _image is not empty %}
  {% set _picture = {
      img: {
        src: _image,
      },
    }
  %}
{% endif %}

{% if _full_width %}
  {% set _figure_class = _figure_class ~ ' ecl-media-container--full-width' %}
{% endif %}

{% if _ratio %}
  {% set _embed_class = _embed_class ~ ' ecl-media-container__media--ratio-' ~ _ratio %}
{% endif %}

{% set _video_title = '' %}
{% if _title is not empty %}
  {% set _video_title = _title %}
{% endif %}
{% if _sr_video_player is not empty %}
  {% set _video_title = _video_title is not empty ? _video_title ~ ' - ' ~ _sr_video_player : _sr_video_player %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if _expandable is not empty and _expandable.id is defined %}
  {% if _expandable.id is defined %}
    {% set _extra_attributes = _extra_attributes ~ ' aria-describedby="' ~ _expandable.id ~ '-content"' %}
  {% endif %}
  {% if _expandable.extra_classes is not empty %}
    {% set _expandable_class = _expandable_class ~ ' ' ~ _expandable.extra_classes %}
  {% endif %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') ~ '="' ~ attr.value|e('html_attr') ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}

<div class="{{ _css_class }}"{{ _extra_attributes|raw }} 
  {% if _video_title is not empty and _embedded_media is not empty %}
    data-ecl-media-container-video-title="{{ _video_title }}"
  {% endif %}
>
  <figure class="{{ _figure_class }}">
  {% if _embedded_media is not empty %}
    <div class="{{_embed_class}}">
      {% if _sr_video_audio is not empty %}
        <div class="{{_embed_class}}-audio">{{ _sr_video_audio }}</div>
      {% endif %}
      {%- block embedded_media _embedded_media -%}
    </div>
  {% elseif _sources is not empty and _sources is iterable %}
    <video
      class="ecl-media-container__media"
      controls
      poster="{{ _image }}"
      {%- if _video_title is not empty -%}
        aria-label="{{ _video_title }}"
      {%- endif -%}
    >
  {% for source in _sources %}
    <source type="{{ source.type }}" src="{{ source.src }}" />
  {% endfor %}
    {% if _tracks is not empty and _tracks is iterable %}
    {% for track in _tracks %}
      <track
        kind="{{ track.kind }}"
        label="{{ track.label }}"
        src="{{ track.src }}"
        srclang="{{ track.src_lang }}"
      />
    {% endfor %}
    {% endif %}
    </video>
  {% else %}
    {% include '@ecl/picture/picture.html.twig' with {
      picture: _picture,
      extra_classes: 'ecl-media-container__picture',
      extra_image_classes: 'ecl-media-container__media',
    } only %}
  {% endif %}
  {% if _description is not empty %}
    <figcaption class="ecl-media-container__caption">
      {{- _description -}}
    </figcaption>
  {% endif %}
  </figure>

  {% if _expandable is not empty %}
    {% include '@ecl/expandable/expandable.html.twig' with _expandable|merge({
      extra_classes: _expandable_class,
    }) only %}
  {% endif %}
</div>

{% endapply %}
