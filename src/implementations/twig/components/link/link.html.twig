{% apply spaceless %}

{#
  Parameters:
   - "link" (associative array) (default: predefined structure): format:
      {
        type: '' (can be '', 'standalone', 'cta', 'primary', 'secondary')
        inverted: false (boolean),
        no_visited: false (boolean),
        label: '' (string),
        path: '', (string) (Link url)
        aria_label: '' (string) Aria label attribute value
        icon_position: 'after' (string) (Can be 'before' or 'after'. Is required only if Icon is specified)
        icon_path: (string) (default: '')
        external: (boolean) (default: false)
        hide_label: (boolean) (default: false): hide link label, for screen reader only. Note: requires to have an icon defined
      }
    - "icon" (associative array) OR (array) of associative arrays : format
      {
        name: (string) (default: ''),
        extra_classes: (string) (default: 'ecl-link__icon'),
        ...
      }
      OR
      [
        {
          name: (string) (default: ''),
          extra_classes: (string) (default: 'ecl-link__icon'),
          ....
        },
        {
          name: (string) (default: ''),
          extra_classes: (string) (default: 'ecl-link__icon'),
          ...
        }
        ...
      ]
    - "extra_classes" (string) (default: '')
    - "extra_attributes" (array) (default: []): format: [
        {
          "name" (string) (default: ''),
          "value" (optional) (string)
        ...
      ],
#}

{# Internal properties #}

{% set _link = {
  type: '',
  label: '',
  path: '',
  icon_position: 'after',
  external: false,
  hide_label: false,
  icon_path: '',
} %}

{% set _icon = {
  name: '',
  path: '',
  size: ''
} %}

{% set _css_class = 'ecl-link' %}
{% set _extra_attributes = '' %}

{% if link is defined %}
  {% set _link = _link|merge(link) %}
{% endif %}

{% if _link.external and _link.icon_path is not empty %}
  {% set _icons = [_icon|merge({
    name: 'external',
    path: _link.icon_path,
    size: '2xs',
  })] %}

  {% set _link = _link|merge({ icon_position: _link.icon_position|default('after') }) %}
{% else %}
  {% if icon.name is defined and icon.name is not empty %}
    {% set _icons = [icon] %}
  {% elseif icon[1] is defined and icon[1] is not empty %}
    {% set _icons = icon %}
  {% endif %}
{% endif %}

{# Internal logic - Process properties #}

{% if _link.type is defined and _link.type is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ _css_class ~ '--' ~ _link.type %}
{% endif %}

{% if _link.inverted is defined and _link.inverted %}
  {% set _css_class = _css_class ~ ' ecl-link--inverted' %}
{% endif %}

{% if _link.no_visited is defined and _link.no_visited %}
  {% set _css_class = _css_class ~ ' ecl-link--no-visited' %}
{% endif %}

{% if _icons is defined %}
  {% set _css_class = _css_class ~ ' ecl-link--icon' %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if _link.hide_label and _icon is not empty %}
  {% set _css_class = _css_class ~ ' ecl-link--icon-only' %}
{% endif %}

{% if _link.aria_label is defined and _link.aria_label is not empty %}
  {% set extra_attributes = extra_attributes|default([])|merge([{ name: 'aria-label', value: _link.aria_label }]) %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% if attr.value is defined %}
      {% if attr.name == 'id' %}
        {% set _label_id = attr.value ~ '-label' %}
      {% endif %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') ~ '="' ~ attr.value|e('html_attr') ~ '"' %}
    {% else %}
      {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name|e('html_attr') %}
    {% endif %}
  {% endfor %}
{% endif %}

{# Print the result #}

<a
  href="{{ _link.path }}"
  class="{{ _css_class }}"
  {{ _extra_attributes|raw }}
>
  {%- if _link.icon_position == 'before' and (_icons is defined or _link.external) -%}
    {% for icon in _icons %}
      {%- if icon.name is not empty -%}
        {% set _icon_extra_classes = 'ecl-link__icon' %}
        {%- if icon.extra_classes is defined and icon.extra_classes is not empty -%}
          {% set _icon_extra_classes = _icon_extra_classes ~ ' ' ~ icon.extra_classes %}
        {%- endif -%}
        {%- include '@ecl/icon/icon.html.twig' with _icon|merge({
          icon: icon|default({}),
          extra_classes: _icon_extra_classes,
          extra_accessibility: extra_accessibility|default({}),
          as_image: as_image|default(false),
        }) only -%}
      {%- endif -%}
    {% endfor %}
  {%- endif -%}
  {%- if (_icons is defined and _icons is not empty) -%}
    <span 
      class="ecl-link__label"
    {%- if _label_id is defined %}
      id="{{ _label_id }}"
    {%- endif -%}
    >
      {{- _link.label -}}
    </span>
  {%- endif -%}
  {%- if _link.icon_position == 'after' and (_icons is defined or _link.external) -%}
    {% for icon in _icons %}
      {%- if icon.name is not empty -%}
        {% set _icon_extra_classes = 'ecl-link__icon' %}
        {%- if icon.extra_classes is defined and icon.extra_classes is not empty -%}
          {% set _icon_extra_classes = _icon_extra_classes ~ ' ' ~ icon.extra_classes %}
        {%- endif -%}
        {%- include '@ecl/icon/icon.html.twig' with _icon|merge({
          icon: icon|default({}),
          extra_classes: _icon_extra_classes,
          extra_accessibility: extra_accessibility|default({}),
          as_image: as_image|default(false),
        }) only -%}
      {%- endif -%}
    {% endfor %}
  {%- endif -%}
  {% if _icons is not defined %}
    {{- _link.label -}}
  {% endif %}
</a>

{% endapply %}
