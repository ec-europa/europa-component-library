{#
  Parameters:
    - "link" (object) (default: {}): shape of @ecl/generic-component-link
    - "variant" (string) (default: ''): correspond to the social network
    - "label" (string) (default: ''): used if "link" is not provided
    - "extra_classes" (string) (default: '')
    - "extra_attributes" (array) (default: []): format: [
        {
          "name" (string) (default: ''),
          "value" (string) (default: '')
        },
        ...
      ]
    - "system" (string) (default: "generic")
#}

{# Internal properties #}

{% set _link = link|default({}) %}
{% set _label = label|default('') %}
{% set _variant = variant|default('') %}
{% set _css_class = 'ecl-social-icon' %}
{% set _extra_attributes = '' %}
{% set _system = system|default('generic') %}

{# Internal logic - Process properties #}

{% if _variant is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ 'ecl-social-icon--' ~ _variant %}
{% endif %}

{% if extra_classes is defined and extra_classes is not empty %}
  {% set _css_class = _css_class ~ ' ' ~ extra_classes %}
{% endif %}

{% if extra_attributes is defined and extra_attributes is not empty and extra_attributes is iterable %}
  {% for attr in extra_attributes %}
    {% set _extra_attributes = _extra_attributes ~ ' ' ~ attr.name ~ '="' ~ attr.value ~ '"' %}
  {% endfor %}
{% endif %}

{# Print the result #}

{% if _link is not empty %}
  {% include '@ecl/' ~ _system ~ '-component-link' with _link|merge({
    'extra_classes': _link.extra_classes|default('') ~ ' ' ~ _css_class,
    'extra_attributes': (_link.extra_attributes|default([]))|merge(extra_attributes|default([]))
  }) only %}
{% else %}
  <span class="{{ _css_class }}"{{ _extra_attributes|raw }}>{{ _label }}</span>
{% endif %}
